<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.indexdata</groupId>
    <artifactId>reservoir</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>reservoir-server</artifactId>
  <name>Reservoir storage server module</name>
  <properties>
    <main.class>com.indexdata.reservoir.server.ReservoirLauncher</main.class>
    <native.main.class>com.indexdata.reservoir.server.NativeMain</native.main.class>
    <vertx.verticle>com.indexdata.reservoir.server.MainVerticle</vertx.verticle>
    <graal.compiler.dir>${project.build.directory}/compiler</graal.compiler.dir>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.indexdata</groupId>
      <artifactId>reservoir-util</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-launcher-application</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-rx-java2</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web-openapi-router</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-pg-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-micrometer-metrics</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-jmx</artifactId>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>vertx-lib</artifactId>
    </dependency>
    <!-- log4j deps rely on log4j-bom since vertx-stack-depchain only inludes log4j-core in test scope-->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.folio.okapi</groupId>
      <artifactId>okapi-common</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
    </dependency>
    <dependency>
      <groupId>org.graalvm.polyglot</groupId>
      <artifactId>polyglot</artifactId>
    </dependency>
    <dependency>
      <groupId>org.graalvm.polyglot</groupId>
      <artifactId>js</artifactId>
      <type>pom</type>
    </dependency>
    <!-- Test dependencies -->
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-solrj</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-unit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- logging see http://www.slf4j.org/legacy.html -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j2-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-jul</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>vertx-lib-pg-testing</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.folio.okapi</groupId>
      <artifactId>okapi-testing</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.folio.okapi</groupId>
      <artifactId>okapi-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>solr</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>org/folio/okapi/common/logging/FolioLoggingContext.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>filter-descriptor-inputs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/../descriptors</directory>
                  <include>*Descriptor*-template.json</include>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Automatic-Module-Name>com.indexdata.reservoir.server</Automatic-Module-Name>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.folio</groupId>
        <artifactId>openapi-deref-plugin</artifactId>
        <version>4.0.0</version>
        <executions>
          <execution>
            <id>dereference-books</id>
            <goals>
              <goal>dereference</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>docker-build</id>
      <build>
        <plugins>
          <plugin>
            <groupId>pl.project13.maven</groupId>
            <artifactId>git-commit-id-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>${graalvm-maven-plugin.version}</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
              <execution>
                <id>test-native</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
              </execution>
            </executions>
            <configuration>
              <imageName>reservoir-native</imageName>
              <mainClass>${native.main.class}</mainClass>
              <skipNativeTests>true</skipNativeTests>
              <debug>true</debug>
              <verbose>true</verbose>
              <quickBuild>false</quickBuild>
              <buildArgs>
                <buildArg>--no-fallback</buildArg>
                <buildArg>-H:ResourceConfigurationFiles=${project.basedir}/resource-config.json</buildArg>
                <buildArg>-H:ReflectionConfigurationFiles=${project.basedir}/reflection-config.json</buildArg>
                <buildArg>--enable-url-protocols=https</buildArg>
                <buildArg>--enable-native-access=ALL-UNNAMED</buildArg>
                <buildArg>--enable-native-access=org.graalvm.truffle</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>regular-jvm</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <!-- https://github.com/graalvm/polyglot-embedding-demo/blob/main/pom.xml -->
                <configuration>
                  <outputDirectory>${graal.compiler.dir}</outputDirectory>
                  <overWriteReleases>true</overWriteReleases>
                  <overWriteSnapshots>true</overWriteSnapshots>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.graalvm.sdk</groupId>
                      <artifactId>collections</artifactId>
                      <version>${graalvm.version}</version>
                      <type>jar</type>
                      <destFileName>collections.jar</destFileName>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.graalvm.sdk</groupId>
                      <artifactId>word</artifactId>
                      <version>${graalvm.version}</version>
                      <type>jar</type>
                      <destFileName>word.jar</destFileName>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.graalvm.truffle</groupId>
                      <artifactId>truffle-compiler</artifactId>
                      <version>${graalvm.version}</version>
                      <type>jar</type>
                      <destFileName>truffle-compiler.jar</destFileName>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.graalvm.compiler</groupId>
                      <artifactId>compiler</artifactId>
                      <version>${graalvm.version}</version>
                      <type>jar</type>
                      <destFileName>compiler.jar</destFileName>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
