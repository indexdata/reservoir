FROM container-registry.oracle.com/graalvm/jdk:24 AS builder

RUN microdnf install -y maven

WORKDIR /app

# Needed for git-commit-id-plugin
COPY .git/ .git

COPY pom.xml .
COPY checkstyle/ checkstyle
COPY client/ client
COPY descriptors/ descriptors
COPY js/ js
COPY server/ server
COPY util/ util
COPY xsl/ xsl

RUN mvn -B -DskipTests package

FROM container-registry.oracle.com/graalvm/jdk:24 AS slim

ENV JAVA_MODULES=\
java.base,\
java.desktop,\
java.logging,\
java.sql,\
java.xml,\
jdk.graal.compiler,\
jdk.internal.vm.ci,\
jdk.unsupported,\
org.graalvm.truffle.compiler

# Build a slim runtime image with just what's needed
RUN $JAVA_HOME/bin/jlink \
    --strip-debug --no-header-files --no-man-pages --compress=2 \
    --add-modules $JAVA_MODULES \
    --output /opt/graalvm-slim

FROM oraclelinux:9-slim

# Create non-root user, home dir is needed so Graal can write attach files for JIT-enabled JS.
RUN useradd -u 1000 -m -s /sbin/nologin reservoir

# Copy slim runtime
COPY --from=slim /opt/graalvm-slim /opt/graalvm-slim

# Copy app JAR
COPY --from=builder /app/server/target/mod-reservoir-server-fat.jar /reservoir.jar
RUN chown reservoir:reservoir /reservoir.jar

# Switch to non-root user
USER reservoir

ENV JAVA_HOME=/opt/graalvm-slim
ENV PATH="$JAVA_HOME/bin:${PATH}"
ENV GRAAL_OPTS="--sun-misc-unsafe-memory-access=allow --enable-native-access=ALL-UNNAMED"

EXPOSE 8081
ENTRYPOINT ["sh", "-c", "$JAVA_HOME/bin/java $JAVA_OPTS $GRAAL_OPTS -jar /reservoir.jar"]
