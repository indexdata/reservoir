FROM container-registry.oracle.com/graalvm/jdk:24 AS builder

RUN microdnf install -y maven && microdnf clean all

# Docker on GitHub Actions does not persist cache mounts so they are only useful locally
# as a GHA workaround, we fetch maven deps first and rely on Docker layer caching
# we allow overriding the mount type and source here, so e.g one can BIND mount $HOME/.m2/repository
# but this is not possible for GH runner's maven repo due to isolation
ARG MAVEN_MOUNT_TYPE=cache
ARG MAVEN_MOUNT_SOURCE=""

WORKDIR /app

COPY pom.xml .
COPY client/pom.xml client/pom.xml
COPY server/pom.xml server/pom.xml
COPY util/pom.xml util/pom.xml

RUN --mount=type=${MAVEN_MOUNT_TYPE},source=${MAVEN_MOUNT_SOURCE},target=/root/.m2/repository mvn -B dependency:go-offline

COPY client/ client/
COPY server/ server
COPY util/ util
COPY descriptors/ descriptors
ARG GIT_COMMIT=master
RUN echo "git.commit.id=${GIT_COMMIT}" > server/src/main/resources/git.properties

RUN --mount=type=${MAVEN_MOUNT_TYPE},source=${MAVEN_MOUNT_SOURCE},target=/root/.m2/repository mvn -B -DskipTests -Pdocker-build package

FROM container-registry.oracle.com/graalvm/jdk:24 AS slim

ENV JAVA_MODULES=\
java.base,\
java.logging,\
java.sql,\
java.xml,\
java.security.sasl,\
jdk.graal.compiler,\
jdk.internal.vm.ci,\
jdk.unsupported,\
org.graalvm.truffle.compiler

# Build a slim runtime image with just what's needed
RUN $JAVA_HOME/bin/jlink \
    --strip-debug --no-header-files --no-man-pages --compress=2 \
    --add-modules $JAVA_MODULES \
    --output /opt/graalvm-slim

# Create non-root user, home dir is needed so Graal can write attach files for JIT-enabled JS.
RUN useradd -u 1000 -m -s /sbin/nologin reservoir

RUN mkdir -p /home/reservoir/tmp && chown -R 1000:1000 /home/reservoir/tmp && chmod 777 /home/reservoir/tmp

# Save list of shared lib deps
RUN ldd /opt/graalvm-slim/bin/java | tr -s '[:blank:]' '\n' | grep '^/' | \
    xargs -I % sh -c 'mkdir -p $(dirname deps%); cp % deps%;'

FROM scratch

# need to copy SSL certs and runtime use
COPY --from=slim /etc/passwd /etc/passwd
COPY --from=slim /etc/group /etc/group
COPY --from=slim /home/reservoir /home/reservoir

# Copy shared lib deps
COPY --from=slim /app/deps /
# Copy librt for real-time extensions. Was not part of /app/deps for some reason
COPY --from=slim /usr/lib64/librt.so.1 /usr/lib64/librt.so.1
# Copy libm. Was not part of /app/deps for some reason
COPY --from=slim /usr/lib64/libm.so.6 /usr/lib64/libm.so.6
# Copy slim runtime
COPY --from=slim /opt/graalvm-slim /opt/graalvm-slim

# Copy app JAR
COPY --from=builder /app/server/target/mod-reservoir-server-fat.jar /reservoir.jar

# Switch to non-root user
# But it doesn't work as /home/reservoir/tmp is seemingly not writable by this user
# USER reservoir

ENV JAVA_HOME=/opt/graalvm-slim

EXPOSE 8081

CMD ["/opt/graalvm-slim/bin/java", "-Dvertx.cacheDirBase=/home/reservoir/tmp", "--sun-misc-unsafe-memory-access=allow", "--enable-native-access=ALL-UNNAMED", "-jar", "/reservoir.jar"]
